<Type Name="SecureSocketOptions" FullName="MailKit.Security.SecureSocketOptions">
  <TypeSignature Language="C#" Value="public enum SecureSocketOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureSocketOptions extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Secure socket options.
            </summary>
    <remarks>
            Provides a way of specifying the SSL and/or TLS encryption that
            should be used for a connection.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.Security.SecureSocketOptions Auto = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SecureSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allow the <see cref="T:MailKit.IMailService" /> to decide which SSL
            or TLS options to use (default).
            </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.Security.SecureSocketOptions None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SecureSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            No SSL or TLS encryption should be used.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="SslOnConnect">
      <MemberSignature Language="C#" Value="SslOnConnect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.Security.SecureSocketOptions SslOnConnect = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SecureSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The connection should use SSL or TLS encryption immediately.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StartTls">
      <MemberSignature Language="C#" Value="StartTls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.Security.SecureSocketOptions StartTls = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SecureSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Elevates the connection to use TLS encryption immediately after
            reading the greeting and capabilities of the server. If the server
            does not support the STARTTLS extension, then the connection will
            fail and a <see cref="T:System.NotSupportedException" /> will be thrown.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StartTlsWhenAvailable">
      <MemberSignature Language="C#" Value="StartTlsWhenAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.Security.SecureSocketOptions StartTlsWhenAvailable = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SecureSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Elevates the connection to use TLS encryption immediately after
            reading the greeting and capabilities of the server, but only if
            the server supports the STARTTLS extension.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
