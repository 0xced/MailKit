<Type Name="SmtpClient" FullName="MailKit.Net.Smtp.SmtpClient">
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable, MailKit.IMessageTransport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class MailKit.IMessageService, class MailKit.IMessageTransport, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMessageTransport</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An SMTP client that can be used to send email messages.
            </summary>
    <remarks>
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> class supports both the "smtp" and "smtps"
            protocols. The "smtp" protocol makes a cleartext connection to the SMTP
            server and does not use SSL or TLS unless the SMTP server supports the
            STARTTLS extension (as defined by rfc2222). The "smtps" protocol,
            however, connects to the SMTP server using an SSL-wrapped connection.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> class.
            </summary>
        <remarks>
            Before you can send messages with the <see cref="T:MailKit.Net.Smtp.SmtpClient" />, you
            must first call the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.Uri,System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationMechanisms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.HashSet&lt;string&gt; AuthenticationMechanisms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.HashSet`1&lt;string&gt; AuthenticationMechanisms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.HashSet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the authentication mechanisms supported by the message service.
            </summary>
        <value>The authentication mechanisms.</value>
        <remarks>
            The authentication mechanisms are queried durring the the
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.Uri,System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public MailKit.Net.Smtp.SmtpCapabilities Capabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.Net.Smtp.SmtpCapabilities Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Net.Smtp.SmtpCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the capabilities supported by the SMTP server.
            </summary>
        <value>The capabilities.</value>
        <remarks>
            The capabilities will not be known until a successful connection
            has been made via the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.Uri,System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the client SSL certificates.
            </summary>
        <value>The client SSL certificates.</value>
        <remarks>
            Some servers may require the client SSL certificates in order
            to allow the user to connect.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (Uri uri, System.Net.ICredentials credentials, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class System.Uri uri, class System.Net.ICredentials credentials, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri">The server URI. The <see cref="P:System.Uri.Scheme" /> should either
            be "smtp" to make a cleartext connection or "smtps" to make an SSL connection.</param>
        <param name="credentials">The user's credentials or <c>null</c> if no credentials are needed.</param>
        <param name="token">A cancellation token.</param>
        <summary>
            Establishes a connection to the specified SMTP server.
            </summary>
        <remarks>
          <para>Establishes a connection to an SMTP or SMTP/S server. If the schema
            in the uri is "smtp", a clear-text connection is made and defaults to using
            port 25 if no port is specified in the URI. However, if the schema in the
            uri is "smtps", an SSL connection is made using the
            <see cref="P:MailKit.Net.Smtp.SmtpClient.ClientCertificates" /> and defaults to port 465 unless a port
            is specified in the URI.</para>
          <para>It should be noted that when using a clear-text SMTP connection,
            if the server advertizes support for the STARTTLS extension, the client
            will automatically switch into TLS mode before authenticating.</para>
            If a successful connection is made, the <see cref="P:MailKit.Net.Smtp.SmtpClient.AuthenticationMechanisms" />
            property will be populated.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>The <paramref name="uri" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
        <exception cref="T:MailKit.Security.SaslException">
            A SASL authentication error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpException">
            An SMTP protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect (bool quit, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect(bool quit, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quit" Type="System.Boolean" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quit">If set to <c>true</c>, a "QUIT" command will be issued in order to disconnect cleanly.</param>
        <param name="token">A cancellation token.</param>
        <summary>
            Disconnect the service.
            </summary>
        <remarks>
            If <paramref name="quit" /> is <c>true</c>, a "QUIT" command will be issued in order to disconnect cleanly.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resource used by the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> object.
            </summary>
        <remarks>Call <see cref="M:MailKit.Net.Smtp.SmtpClient.Dispose" /> when you are finished using the <see cref="T:MailKit.Net.Smtp.SmtpClient" />. The
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Dispose" /> method leaves the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> in an unusable state. After
            calling <see cref="M:MailKit.Net.Smtp.SmtpClient.Dispose" />, you must release all references to the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> so
            the garbage collector can reclaim the memory that the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> was occupying.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether or not the service is currently connected.
            </summary>
        <value>
          <c>true</c> if the service connected; otherwise, <c>false</c>.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public uint MaxSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum message size supported by the server.
            </summary>
        <value>The maximum message size supported by the server.</value>
        <remarks>
            The maximum message size will not be known until a successful
            connect has been made via the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.Uri,System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (MimeKit.MimeMessage message, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class MimeKit.MimeMessage message, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="token">A cancellation token.</param>
        <summary>
            Send the specified message.
            </summary>
        <remarks>
            Sends the message by uploading it to an SMTP server.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is not connected.</para>
          <para>-or-</para>
          <para>A sender has not been specified.</para>
          <para>-or-</para>
          <para>No recipients have been specified.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation has been canceled.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
