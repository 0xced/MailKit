<Type Name="SmtpClient" FullName="MailKit.Net.Smtp.SmtpClient">
  <TypeSignature Language="C#" Value="public class SmtpClient : MailKit.MailTransport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends MailKit.MailTransport" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MailKit.MailTransport</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>
            An SMTP client that can be used to send email messages.
            </summary>
    <remarks>
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> class supports both the "smtp" and "smtps"
            protocols. The "smtp" protocol makes a clear-text connection to the SMTP
            server and does not use SSL or TLS unless the SMTP server supports the
            STARTTLS extension (as defined by rfc3207). The "smtps" protocol,
            however, connects to the SMTP server using an SSL-wrapped connection.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> class.
            </summary>
        <remarks>
            Before you can send messages with the <see cref="T:MailKit.Net.Smtp.SmtpClient" />, you must first call
            the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.String,System.Int32,MailKit.Security.SecureSocketOptions,System.Threading.CancellationToken)" /> method. Depending on the server,
            you may also need to authenticate using the
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (MailKit.IProtocolLogger protocolLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MailKit.IProtocolLogger protocolLogger) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocolLogger" Type="MailKit.IProtocolLogger" />
      </Parameters>
      <Docs>
        <param name="protocolLogger">The protocol logger.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> class.
            </summary>
        <remarks>
            Before you can send messages with the <see cref="T:MailKit.Net.Smtp.SmtpClient" />, you must first call
            the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.String,System.Int32,MailKit.Security.SecureSocketOptions,System.Threading.CancellationToken)" /> method. Depending on the server,
            you may also need to authenticate using the
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="protocolLogger" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public override void Authenticate (System.Net.ICredentials credentials, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Authenticate(class System.Net.ICredentials credentials, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="credentials">The user's credentials.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Authenticates using the supplied credentials.
            </summary>
        <remarks>
          <para>If the SMTP server supports authentication, then the SASL mechanisms
            that both the client and server support are tried in order of greatest
            security to weakest security. Once a SASL authentication mechanism is
            found that both client and server support, the credentials are used to
            authenticate.</para>
          <para>If, on the other hand, authentication is not supported, then
            this method simply returns without attempting to authenticate.</para>
          <para>Note: To prevent the usage of certain authentication mechanisms,
            simply remove them from the the <see cref="P:MailKit.Net.Smtp.SmtpClient.AuthenticationMechanisms" /> hash
            set before calling the Authenticate() method.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentials" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is not connected or is already authenticated.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The SMTP server does not support authentication.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
            Authentication using the supplied credentials has failed.
            </exception>
        <exception cref="T:MailKit.Security.SaslException">
            A SASL authentication error occurred.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpException">
            An SMTP protocol error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            The SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol error occurred.
            </exception>
        <exception cref="T:MailKit.Security.AuthenticationException">
            Authentication using the supplied credentials has failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationMechanisms">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.HashSet&lt;string&gt; AuthenticationMechanisms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.HashSet`1&lt;string&gt; AuthenticationMechanisms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.HashSet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the authentication mechanisms supported by the SMTP server.
            </summary>
        <value>The authentication mechanisms.</value>
        <remarks>
          <para>The authentication mechanisms are queried as part of the
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.String,System.Int32,MailKit.Security.SecureSocketOptions,System.Threading.CancellationToken)" />
            method.</para>
          <para>Note: To prevent the usage of certain authentication mechanisms in
            <see cref="M:MailKit.MailService.Authenticate(System.String,System.String,System.Threading.CancellationToken)" /> or
            <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" />, simply remove
            them from the the <see cref="P:MailKit.Net.Smtp.SmtpClient.AuthenticationMechanisms" /> hash set before
            calling either of the Authenticate() methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public MailKit.Net.Smtp.SmtpCapabilities Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.Net.Smtp.SmtpCapabilities Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Net.Smtp.SmtpCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the capabilities supported by the SMTP server.
            </summary>
        <value>The capabilities.</value>
        <remarks>
            The capabilities will not be known until a successful connection has been made via
            the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.String,System.Int32,MailKit.Security.SecureSocketOptions,System.Threading.CancellationToken)" /> method and may change as a side-effect
            of the <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" /> method.
            </remarks>
        <exception cref="T:System.ArgumentException">
            Capabilities cannot be enabled, they may only be disabled.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public override void Connect (string host, int port = 0, MailKit.Security.SecureSocketOptions options = MailKit.Security.SecureSocketOptions.Auto, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Connect(string host, int32 port, valuetype MailKit.Security.SecureSocketOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="options" Type="MailKit.Security.SecureSocketOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="host">The host name to connect to.</param>
        <param name="port">The port to connect to. If the specified port is <c>0</c>, then the default port will be used.</param>
        <param name="options">The secure socket options to when connecting.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Establishes a connection to the specified SMTP or SMTP/S server.
            </summary>
        <remarks>
          <para>Establishes a connection to the specified SMTP or SMTP/S server.</para>
          <para>If the <paramref name="port" /> has a value of <c>0</c>, then the
            <paramref name="options" /> parameter is used to determine the default port to
            connect to. The default port used with <see cref="F:MailKit.Security.SecureSocketOptions.SslOnConnect" />
            is <c>465</c>. All other values will use a default port of <c>25</c>.</para>
          <para>If the <paramref name="options" /> has a value of
            <see cref="F:MailKit.Security.SecureSocketOptions.Auto" />, then the <paramref name="port" /> is used
            to determine the default security options. If the <paramref name="port" /> has a value
            of <c>465</c>, then the default options used will be
            <see cref="F:MailKit.Security.SecureSocketOptions.SslOnConnect" />. All other values will use
            <see cref="F:MailKit.Security.SecureSocketOptions.StartTlsWhenAvailable" />.</para>
          <para>Once a connection is established, properties such as
            <see cref="P:MailKit.Net.Smtp.SmtpClient.AuthenticationMechanisms" /> and <see cref="P:MailKit.Net.Smtp.SmtpClient.Capabilities" /> will be
            populated.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> is not between <c>0</c> and <c>65535</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The <paramref name="host" /> is a zero-length string.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is already connected.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="options" /> was set to
            <see cref="F:MailKit.Security.SecureSocketOptions.StartTls" />
            and the SMTP server does not support the STARTTLS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            An SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.Sockets.Socket socket, string host, int port = 0, MailKit.Security.SecureSocketOptions options = MailKit.Security.SecureSocketOptions.Auto, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.Sockets.Socket socket, string host, int32 port, valuetype MailKit.Security.SecureSocketOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="options" Type="MailKit.Security.SecureSocketOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="socket">The socket to use for the connection.</param>
        <param name="host">The host name to connect to.</param>
        <param name="port">The port to connect to. If the specified port is <c>0</c>, then the default port will be used.</param>
        <param name="options">The secure socket options to when connecting.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Establish a connection to the specified SMTP or SMTP/S server using the provided socket.
            </summary>
        <remarks>
          <para>Establishes a connection to the specified SMTP or SMTP/S server.</para>
          <para>If the <paramref name="port" /> has a value of <c>0</c>, then the
            <paramref name="options" /> parameter is used to determine the default port to
            connect to. The default port used with <see cref="F:MailKit.Security.SecureSocketOptions.SslOnConnect" />
            is <c>465</c>. All other values will use a default port of <c>25</c>.</para>
          <para>If the <paramref name="options" /> has a value of
            <see cref="F:MailKit.Security.SecureSocketOptions.Auto" />, then the <paramref name="port" /> is used
            to determine the default security options. If the <paramref name="port" /> has a value
            of <c>465</c>, then the default options used will be
            <see cref="F:MailKit.Security.SecureSocketOptions.SslOnConnect" />. All other values will use
            <see cref="F:MailKit.Security.SecureSocketOptions.StartTlsWhenAvailable" />.</para>
          <para>Once a connection is established, properties such as
            <see cref="P:MailKit.Net.Smtp.SmtpClient.AuthenticationMechanisms" /> and <see cref="P:MailKit.Net.Smtp.SmtpClient.Capabilities" /> will be
            populated.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="socket" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="host" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> is not between <c>0</c> and <c>65535</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="socket" /> is not connected.</para>
          <para>-or-</para>
            The <paramref name="host" /> is a zero-length string.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is already connected.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="options" /> was set to
            <see cref="F:MailKit.Security.SecureSocketOptions.StartTls" />
            and the SMTP server does not support the STARTTLS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            An SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public override void Disconnect (bool quit, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Disconnect(bool quit, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quit" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quit">If set to <c>true</c>, a "QUIT" command will be issued in order to disconnect cleanly.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Disconnect the service.
            </summary>
        <remarks>
            If <paramref name="quit" /> is <c>true</c>, a "QUIT" command will be issued in order to disconnect cleanly.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only the unmanaged resources.</param>
        <summary>
            Releases the unmanaged resources used by the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> and
            optionally releases the managed resources.
            </summary>
        <remarks>
            Releases the unmanaged resources used by the <see cref="T:MailKit.Net.Smtp.SmtpClient" /> and
            optionally releases the managed resources.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeliveryStatusNotifications">
      <MemberSignature Language="C#" Value="protected virtual Nullable&lt;MailKit.DeliveryStatusNotification&gt; GetDeliveryStatusNotifications (MimeKit.MimeMessage message, MimeKit.MailboxAddress mailbox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.DeliveryStatusNotification&gt; GetDeliveryStatusNotifications(class MimeKit.MimeMessage message, class MimeKit.MailboxAddress mailbox) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.DeliveryStatusNotification&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
      </Parameters>
      <Docs>
        <param name="message">The message being sent.</param>
        <param name="mailbox">The mailbox.</param>
        <summary>
            Get the types of delivery status notification desired for the specified recipient mailbox.
            </summary>
        <returns>The desired delivery status notification type.</returns>
        <remarks>
            Gets the types of delivery status notification desired for the specified recipient mailbox.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnvelopeId">
      <MemberSignature Language="C#" Value="protected virtual string GetEnvelopeId (MimeKit.MimeMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEnvelopeId(class MimeKit.MimeMessage message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <summary>
            Get the envelope identifier to be used with delivery status notifications.
            </summary>
        <returns>The envelope identifier.</returns>
        <remarks>
          <para>The envelope identifier, if non-empty, is useful in determining which message
            a delivery status notification was issued for.</para>
          <para>The envelope identifier should be unique and may be up to 100 characters in
            length, but must consist only of printable ASCII characters and no white space.</para>
          <para>For more information, see rfc3461, section 4.4.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the client is currently authenticated with the SMTP server.
            </summary>
        <value>
          <c>true</c> if the client is connected; otherwise, <c>false</c>.</value>
        <remarks>
          <para>Gets whether or not the client is currently authenticated with the SMTP server.</para>
          <para>To authenticate with the SMTP server, use
            <see cref="M:MailKit.MailService.Authenticate(System.String,System.String,System.Threading.CancellationToken)" />
            or <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public override bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the client is currently connected to an SMTP server.
            </summary>
        <value>
          <c>true</c> if the client is connected; otherwise, <c>false</c>.</value>
        <remarks>
            When a <see cref="T:MailKit.Net.Smtp.SmtpProtocolException" /> is caught, the connection state of the
            <see cref="T:MailKit.Net.Smtp.SmtpClient" /> should be checked before continuing.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDomain">
      <MemberSignature Language="C#" Value="public string LocalDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the local domain.
            </summary>
        <value>The local domain.</value>
        <remarks>
            The local domain is used in the HELO or EHLO commands sent to
            the SMTP server. If left unset, the local IP address will be
            used instead.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public uint MaxSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the maximum message size supported by the server.
            </summary>
        <value>The maximum message size supported by the server.</value>
        <remarks>
          <para>The maximum message size will not be known until a successful
            connection has been made via the <see cref="M:MailKit.Net.Smtp.SmtpClient.Connect(System.String,System.Int32,MailKit.Security.SecureSocketOptions,System.Threading.CancellationToken)" /> method
            and may change as a side-effect of the <see cref="M:MailKit.Net.Smtp.SmtpClient.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" />
            method.</para>
          <para>Note: This value is only relevant if the <see cref="P:MailKit.Net.Smtp.SmtpClient.Capabilities" />
            includes the <see cref="F:MailKit.Net.Smtp.SmtpCapabilities.Size" /> flag.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoOp">
      <MemberSignature Language="C#" Value="public override void NoOp (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void NoOp(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Ping the SMTP server to keep the connection alive.
            </summary>
        <remarks>Mail servers, if left idle for too long, will automatically drop the connection.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is not connected.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpException">
            The SMTP server returned an unexpected status code.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            The SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="protected override string Protocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the protocol supported by the message service.
            </summary>
        <value>The protocol.</value>
        <remarks>
            Gets the protocol supported by the message service.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (MimeKit.FormatOptions options, MimeKit.MimeMessage message, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Send the specified message.
            </summary>
        <remarks>
            Sends the message by uploading it to an SMTP server.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is not connected.</para>
          <para>-or-</para>
          <para>A sender has not been specified.</para>
          <para>-or-</para>
          <para>No recipients have been specified.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation has been canceled.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            Authentication is required before sending a message.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            The SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol exception occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MimeKit.MailboxAddress sender, System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; recipients, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, class MimeKit.MailboxAddress sender, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; recipients, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="sender" Type="MimeKit.MailboxAddress" />
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="sender">The mailbox address to use for sending the message.</param>
        <param name="recipients">The mailbox addresses that should receive the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Send the specified message using the supplied sender and recipients.
            </summary>
        <remarks>
            Sends the message by uploading it to an SMTP server using the supplied sender and recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="sender" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Smtp.SmtpClient" /> is not connected.</para>
          <para>-or-</para>
          <para>A sender has not been specified.</para>
          <para>-or-</para>
          <para>No recipients have been specified.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation has been canceled.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            Authentication is required before sending a message.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpCommandException">
            The SMTP command failed.
            </exception>
        <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException">
            An SMTP protocol exception occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public override object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an object that can be used to synchronize access to the SMTP server.
            </summary>
        <value>The lock object.</value>
        <remarks>
          <para>Gets an object that can be used to synchronize access to the SMTP server.</para>
          <para>When using the non-Async methods from multiple threads, it is important to lock the
            <see cref="P:MailKit.Net.Smtp.SmtpClient.SyncRoot" /> object for thread safety when using the synchronous methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get or set the timeout for network streaming operations, in milliseconds.
            </summary>
        <value>The timeout in milliseconds.</value>
        <remarks>
            Gets or sets the underlying socket stream's <see cref="P:System.IO.Stream.ReadTimeout" />
            and <see cref="P:System.IO.Stream.WriteTimeout" /> values.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
