<Type Name="AccessRight" FullName="MailKit.AccessRight">
  <TypeSignature Language="C#" Value="public struct AccessRight : IEquatable&lt;MailKit.AccessRight&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AccessRight extends System.ValueType implements class System.IEquatable`1&lt;valuetype MailKit.AccessRight&gt;" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;MailKit.AccessRight&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An individual Access Right to be used with ACLs.
            </summary>
    <remarks>
      <para>An individual Access Right meant to be used with
            <see cref="T:MailKit.AccessControlList" />.</para>
      <para>For more information on what rights are available,
            see https://tools.ietf.org/html/rfc4314#section-2.1
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessRight (char right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char right) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="right" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="right">The access right.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.AccessRight" /> struct.
            </summary>
        <remarks>
            Creates a new <see cref="T:MailKit.AccessRight" /> struct.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Administer">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight Administer;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight Administer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for administering the ACLs of a folder.
            </summary>
        <remarks>
            Provides administrative access to change the ACLs for the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendMessages">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight AppendMessages;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight AppendMessages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right allowing messages to be appended or copied into the folder.
            </summary>
        <remarks>
            Provides access to append or copy messages into the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFolder">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight CreateFolder;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight CreateFolder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right allowing subfolders to be created.
            </summary>
        <remarks>
            Provides access to create subfolders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFolder">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight DeleteFolder;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight DeleteFolder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for deleting a folder and/or its subfolders.
            </summary>
        <remarks>
            Provides access to delete the folder and/or any subfolders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (MailKit.AccessRight other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype MailKit.AccessRight other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="MailKit.AccessRight" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:MailKit.AccessRight" /> to compare with the current <see cref="T:MailKit.AccessRight" />.</param>
        <summary>
            Determines whether the specified <see cref="T:MailKit.AccessRight" /> is equal to the current <see cref="T:MailKit.AccessRight" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:MailKit.AccessRight" /> is equal to the current
            <see cref="T:MailKit.AccessRight" />; otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether the specified <see cref="T:MailKit.AccessRight" /> is equal to the current <see cref="T:MailKit.AccessRight" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:MailKit.AccessRight" />.</param>
        <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:MailKit.AccessRight" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:MailKit.AccessRight" />;
            otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:MailKit.AccessRight" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpungeFolder">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight ExpungeFolder;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight ExpungeFolder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for expunging deleted messages in a folder.
            </summary>
        <remarks>
            Provides access to expunge deleted messages in a folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serves as a hash function for a <see cref="T:MailKit.AccessRight" /> object.
            </summary>
        <returns>A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.</returns>
        <remarks>
            Serves as a hash function for a <see cref="T:MailKit.AccessRight" /> object.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupFolder">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight LookupFolder;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight LookupFolder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for folder lookups.
            </summary>
        <remarks>
            Allows the <see cref="T:MailKit.IMailFolder" /> to be visible when listing folders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (MailKit.AccessRight right1, MailKit.AccessRight right2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype MailKit.AccessRight right1, valuetype MailKit.AccessRight right2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right1" Type="MailKit.AccessRight" />
        <Parameter Name="right2" Type="MailKit.AccessRight" />
      </Parameters>
      <Docs>
        <param name="right1">The first access right to compare.</param>
        <param name="right2">The second access right to compare.</param>
        <summary>
            Determines whether two access rights are equal.
            </summary>
        <returns>
          <c>true</c> if <paramref name="right1" /> and <paramref name="right2" /> are equal; otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether two access rights are equal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (MailKit.AccessRight right1, MailKit.AccessRight right2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype MailKit.AccessRight right1, valuetype MailKit.AccessRight right2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right1" Type="MailKit.AccessRight" />
        <Parameter Name="right2" Type="MailKit.AccessRight" />
      </Parameters>
      <Docs>
        <param name="right1">The first access right to compare.</param>
        <param name="right2">The second access right to compare.</param>
        <summary>
            Determines whether two access rights are not equal.
            </summary>
        <returns>
          <c>true</c> if <paramref name="right1" /> and <paramref name="right2" /> are not equal; otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether two access rights are not equal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFolder">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight OpenFolder;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight OpenFolder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for opening a folder and getting the status.
            </summary>
        <remarks>
            Provides access for opening and getting the status of the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public readonly char Right;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly char Right" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The character representing the particular access right.
            </summary>
        <remarks>
            Represents the character value of the access right.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageDeleted">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight SetMessageDeleted;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight SetMessageDeleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for adding or removing the Deleted flag to messages within a folder.
            </summary>
        <remarks>
            Provides access to add or remove the <see cref="F:MailKit.MessageFlags.Deleted" /> flag from
            messages within the folder. It also provides access for setting the
            <see cref="F:MailKit.MessageFlags.Deleted" /> flag when appending a message to a folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageFlags">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight SetMessageFlags;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight SetMessageFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for adding or removing flags (other than Seen and Deleted)
            on messages in a folder.
            </summary>
        <remarks>
            Provides access to add or remove the <see cref="T:MailKit.MessageFlags" /> on messages
            (other than <see cref="F:MailKit.MessageFlags.Seen" /> and
            <see cref="F:MailKit.MessageFlags.Deleted" />) within the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageSeen">
      <MemberSignature Language="C#" Value="public static readonly MailKit.AccessRight SetMessageSeen;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MailKit.AccessRight SetMessageSeen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.AccessRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access right for adding or removing the Seen flag on messages in the folder.
            </summary>
        <remarks>
            Provides access to add or remove the <see cref="F:MailKit.MessageFlags.Seen" /> flag on messages within the
            <see cref="T:MailKit.IMailFolder" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.AccessRight" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.AccessRight" />.</returns>
        <remarks>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.AccessRight" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
